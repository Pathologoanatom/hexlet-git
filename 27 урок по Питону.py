#Мое решение - кривое
def get_hidden_card(card_number, b=4):
   card_number = '1234123412341234'
   b = "*" * 4
   result1 = f'{b + card_number[-4:]}'
   
   return str(result1)
get_hidden_card(str)




#Правильное решение

def get_hidden_card(card_number, stars_count=4):
    visible_digits = card_number[-4:]
    return f'{"*" * stars_count}{visible_digits}'
# Реализуйте функцию get_hidden_card(), которая принимает на вход номер кредитки (состоящий из 16 цифр) в виде строки и возвращает его скрытую версию, которая может использоваться на сайте для отображения. Если исходная карта имела номер 2034399002125581, то скрытая версия выглядит так ****5581. Другими словами, функция заменяет первые 12 символов, на звездочки. Количество звездочек регулируется вторым необязательным параметром. Значение по умолчанию — 4.

#Получается функция на вход принимает любое 16-ти значное число card_number, а stars_count=4 это параметр по умолчанию (количество звездочек), далее создаем переменную в которой значение которое мы даем на ввод (16-ти значное) у нас с ним произойдет скрытие первых 12 цифр, далее нужно сделать возврат строки с помощью return. f'{"*" * stars_count}{visible_digits}' эта часть кода получается интерполирует.
